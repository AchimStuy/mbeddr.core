def script_build_tutorialLanguages = new File(scriptsBasePath + "/com.mbeddr.tutorial/" + "build-languages.xml")
def script_build_tutorialSolutions = new File(scriptsBasePath + "/com.mbeddr.tutorial/" + "build-solutions.xml")


task build_tutorial_languages(type: Exec) {
    workingDir rootProject.projectDir
    def args = [mps_home, mbeddr_home, build_dir, slall_home, artifacts_root, '-f', script_build_tutorialLanguages]
    commandLine('ant', *args, *languages_targets)
}

task build_tutorial_solutions(type: Exec, dependsOn: build_tutorial_languages) {
    workingDir rootProject.projectDir
    def args = [mps_home, mbeddr_home, build_dir, slall_home, artifacts_root, '-f', script_build_tutorialSolutions]
    commandLine('ant', *args, *languages_targets)
}

task build_tutorial(dependsOn: build_tutorial_solutions) { }

task package_tutorial(type: Zip) {
    from rootProject.projectDir.absolutePath + "/code/applications/tutorial"
    destinationDir  new File(rootProject.projectDir.absolutePath + "/artifacts/" + "com.mbeddr.tutorial")
    archiveName "com.mbeddr.tutorial.zip"
}

task publish_mbeddrTutorial(type: Zip, dependsOn: package_tutorial) {
    from rootProject.projectDir.absolutePath + "/artifacts/" + "com.mbeddr.tutorial"
}
