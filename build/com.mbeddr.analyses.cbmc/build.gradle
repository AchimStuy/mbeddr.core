def script_build_cbmcWin = new File(rootProject.projectDir.absolutePath + "/build" + "/com.mbeddr.analyses.cbmc/" + "build-cbmc-win.bat")
def script_build_cbmcLinux = new File(rootProject.projectDir.absolutePath + "/build" + "/com.mbeddr.analyses.cbmc/" + "build-cbmc-linux.sh")
def script_build_cbmcMac = new File(rootProject.projectDir.absolutePath + "/build" + "/com.mbeddr.analyses.cbmc/" + "build-cbmc-mac.sh")

File cbmcSrcHome = file(rootProject.projectDir.absolutePath + "/../cbmc/src")
File cbmcHome = file(rootProject.projectDir.absolutePath + "/../cbmc/")

task build_cbmcWin(type: Exec) {
  workingDir cbmcSrcHome
  commandLine(script_build_cbmcWin)
}

task build_cbmcMac(type: Exec) {
    workingDir cbmcSrcHome
    def args = buildProcSpawnArgList([script_build_cbmcMac])
    commandLine(args)
}

task build_cbmcLinux(type: Exec) {
    workingDir cbmcSrcHome
    def args = buildProcSpawnArgList([script_build_cbmcLinux])
    commandLine(args)
}

task publish_cbmcWin(type: Zip) {
    from file(cbmcHome.absolutePath + "/" + "cbmc-win.zip")
}

task publish_cbmcMac(type: Zip) {
    from file(cbmcHome.absolutePath + "/" + "cbmc-mac.zip")
}

task publish_cbmcLinux(type: Zip) {
    from file(cbmcHome.absolutePath + "/" + "cbmc-linux.tar.gz")
}
