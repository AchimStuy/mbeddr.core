def script_build_cbmcWin = new File(scriptsBasePath + "/com.mbeddr.analyses.cbmc/" + "build-cbmc-win.bat")
def script_build_cbmcLinux = new File(scriptsBasePath + "/com.mbeddr.analyses.cbmc/" + "build-cbmc-linux.sh")
def script_build_cbmcMac = new File(scriptsBasePath + "/com.mbeddr.analyses.cbmc/" + "build-cbmc-mac.sh")

task build_cbmcWin(type: Exec) {
  workingDir rootProject.projectDir
  def args = buildProcSpawnArgList(['start', script_build_cbmcWin])
  commandLine(args)
}

task build_cbmcMac(type: Exec) {
    workingDir rootProject.projectDir
    def args = buildProcSpawnArgList([script_build_cbmcMac])
    commandLine(args)
}

task publish_cbmcWin(type: Zip, dependsOn: build_cbmcWin) {
    from rootProject.projectDir.absolutePath
    include "cbmc-win.zip"
}

task publish_cbmcMac(type: Zip, dependsOn: build_cbmcMac) {
    from rootProject.projectDir.absolutePath
    include "cbmc-mac.zip"
}

task build_cbmcLinux(type: Exec) {
    workingDir rootProject.projectDir
    commandLine(script_build_cbmcLinux)
}

task publish_cbmcLinux(type: Zip, dependsOn: build_cbmcLinux) {
    from rootProject.projectDir.absolutePath
    include "cbmc-linux.tar.gz"
}