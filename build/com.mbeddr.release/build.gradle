def script_build_mbeddrDMG = new File(rootProject.projectDir.absolutePath + "/buildUtil/" + "build.xml")
def script_build_installer = new File(rootProject.projectDir.absolutePath + "/build/com.mbeddr.release/" + "build-installer.bat")


task resolveMacRCP(type: Copy) {
    from rootProject.projectDir.absolutePath + "/artifacts/mpsDistribution/"
    into rootProject.projectDir.absolutePath + "/buildUtil"
}

task package_dmg(type: Exec, dependsOn: resolveMacRCP) {
    workingDir rootProject.projectDir.absolutePath + "/buildUtil"
    def args = buildProcSpawnArgList(['ant', '-f', script_build_mbeddrDMG, 'macbuild'])
    commandLine (args)
}

task publish_mbeddr_dmg(type: Zip, dependsOn: package_dmg) {
    from rootProject.projectDir.absolutePath + "/buildUtil"
    include "*.dmg"
}

task copy_jdk(type: Copy) {
    from rootProject.projectDir.absolutePath + "/buildUtil"
    include "jdk.zip"
    include "jdk..tar.gz"
    into rootProject.projectDir.absolutePath + "/files/mbeddr/"
}

task copy_rcp(type: Copy) {
    from rootProject.projectDir.absolutePath + "/artifacts/mpsDistribution"
    include "*.zip"
    into rootProject.projectDir.absolutePath + "/files/mbeddr/"
}

task copy_cbmc(type: Copy) {
    from rootProject.projectDir.absolutePath + "/artifacts/mpsDistribution"
    include "*.zip"
    into rootProject.projectDir.absolutePath + "/files/mbeddr/"
    // cbmc-win.zip!**=>%teamcity.build.checkoutDir%/files/3rd-party/cbmc
}

task unzip_nsis(type: Copy) {
    from(zipTree(rootProject.projectDir.absolutePath + "/NSIS/NSIS.zip")) { }
    into rootProject.projectDir.absolutePath + "/NSIS/"
}

task build_installer(type: Exec, dependsOn: ['copy_jdk', 'copy_rcp', 'unzip_nsis']) {
    workingDir rootProject.projectDir.absolutePath
    def args = buildProcSpawnArgList([script_build_installer])
    commandLine (args)
}

task publish_installer(type: Zip, dependsOn: build_installer) {
    from rootProject.projectDir.absolutePath
    include "*.exe"
}