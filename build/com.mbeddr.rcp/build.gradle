def script_build_mbeddrRCPMPS = new File(scriptsBasePath + "/com.mbeddr.rcp/" + "mps.xml")
def script_build_mbeddrRCPDistribution = new File(scriptsBasePath + "/com.mbeddr.rcp/" + "mpsDistribution.xml")
def script_build_mbeddrJRE = new File(rootProject.projectDir.absolutePath + "/buildUtil/" + "build.xml")


task build_mbeddrRCP(type: Exec, dependsOn: 'resolve_mps') {
  workingDir rootProject.projectDir
  def args = buildProcSpawnArgList([*dependsOnMbeddr_scriptArgs, *(antScriptLocation(script_build_mbeddrRCPMPS)), *languages_targets])
  commandLine (args)
}

task build_mbeddrRCPDistributuion(type: Exec, dependsOn: build_mbeddrRCP) {
    workingDir rootProject.projectDir
    def args = buildProcSpawnArgList([*dependsOnMbeddr_scriptArgs, *(antScriptLocation(script_build_mbeddrRCPDistribution)), *assemble_targets])
    commandLine (args)
}

task publish_mbeddrRCP(type: Zip, dependsOn: build_mbeddrRCPDistributuion) {
    from rootProject.projectDir.absolutePath + "/artifacts/mpsDistribution"
    include "*.zip"
    include "*.tar.gz"
}

// invoke this task from the cmd via 'gradle download_jre -PserverUser=<user> -PserverPassword=<password>'
task download_JRE(type: Exec) {
    workingDir rootProject.projectDir
    def args = ['-Dserver.user='+serverUser, '-Dserver.password='+serverPassword, '-f', script_build_mbeddrJRE]
    commandLine('ant', *args, 'get-jdk')
}

task publish_JRE(type: Zip, dependsOn: download_JRE) {
    from rootProject.projectDir.absolutePath + "/buildUtil"
    include "jdk.zip"
    include "jdk..tar.gz"
}

